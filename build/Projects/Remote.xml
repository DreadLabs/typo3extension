<?xml version="1.0" encoding="UTF-8"?>
<project name="Remote">

	<target name="remote:upload-release:prepare">
		<echo>Uploading files in progress, please be patient...</echo>

		<resolvepath
			propertyName="release.package"
			file="${build.cache.dir}${release.id}.tar.gz" />
	</target>

	<target name="remote:upload-release:seclib" unless="isCurrentSSH2">
		<seclibsftp
				host="${target.hostname}"
				port="${target.port}"
				username="${target.username}"
				password="${target.password}"
				todir="${target.path}/${target.releases.dir}/${release.id}/"
				file="${release.package}" />
	</target>

	<target name="remote:upload-release:ssh2" if="isCurrentSSH2">
		<sftp
			host="${target.hostname}"
			port="${target.port}"
			username="${target.username}"
			password="${target.password}"
			todir="${target.path}/${target.releases.dir}/${release.id}/"
			file="${release.package}" />
	</target>

	<target name="remote:upload-release" depends="project:compress, remote:upload-release:prepare, remote:upload-release:seclib, remote:upload-release:ssh2">
		<echo>Successfully uploaded release ${release.id} to ${target.path}/${target.releases.dir}/${release.id}/</echo>
	</target>

	<target name="remote:extract-release:seclib" unless="isCurrentSSH2">
		<seclibssh
			host="${target.hostname}"
			port="${target.port}"
			username="${target.username}"
			password="${target.password}"
			command="cd ${target.path}/${target.releases.dir}/${release.id} &amp;&amp; tar xzf ${release.id}.tar.gz &amp;&amp; rm -f ${release.id}.tar.gz" />
	</target>

	<target name="remote:extract-release:ssh2" if="isCurrentSSH2">
		<ssh
			host="${target.hostname}"
			port="${target.port}"
			username="${target.username}"
			password="${target.password}"
			command="cd ${target.path}/${target.releases.dir}/${release.id} &amp;&amp; tar xzf ${release.id}.tar.gz &amp;&amp; rm -f ${release.id}.tar.gz" />
	</target>

	<target name="remote:extract-release" depends="remote:setup:new-release-directory, remote:upload-release, remote:extract-release:seclib, remote:extract-release:ssh2">
		<echo>Successfully extracted release</echo>
	</target>

	<target name="remote:switch-symlink:prepare">
		<echo>Switching `current` symlink ${target.current.dir} to release ${release.id}</echo>
	</target>

	<target name="remote:switch-symlink:seclib" unless="isCurrentSSH2">
		<seclibssh
			host="${target.hostname}"
			port="${target.port}"
			username="${target.username}"
			password="${target.password}"
			command="ln -snf ${target.path}/${target.releases.dir}/${release.id} ${target.path}/${target.current.dir}" />
	</target>

	<target name="remote:switch-symlink:ssh2" if="isCurrentSSH2">
		<ssh
			host="${target.hostname}"
			port="${target.port}"
			username="${target.username}"
			password="${target.password}"
			command="ln -snf ${target.path}/${target.releases.dir}/${release.id} ${target.path}/${target.current.dir}" />
	</target>

	<target name="remote:switch-symlink" depends="remote:switch-symlink:seclib, remote:switch-symlink:ssh2">
		<echo>Successfully switched the release symlink</echo>
	</target>

	<target name="remote:run" depends="project:is-clean, remote:extract-release, remote:switch-symlink:prepare, remote:switch-symlink">
	</target>
</project>